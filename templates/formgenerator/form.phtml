<div align="right" class="messagebox">

<form method="post" action="">

        Load a different template >

        <select name="newFormConfig">
            
<?php 
// If a template was selected, select it after reload.
if ( true == isset ( $this->loadedFormConfig ) ) {
    echo '<option value="'. $this->loadedFormConfig .'">'. $this->loadedFormConfig .'</option>';
}
?>
            
            <option value="">- please select -</option>

<?php
// Read all XML files in formconfig folder and generate a list.
foreach ( Tools::getConfigFileList () as $file )
{
    echo '<option value="'. $file .'" label="'. $file .'">'. $file .'</option>';
}
?>
        </select>
        <input type="submit" value=">>"/>
    
    </div>

</form>


<!-- Content of "headline" tag -->
<form id="mainform" method="post" action="<?php echo $this->actionUrl; ?>">


<!-- Content of "headline" tag -->
<h1><?php echo $this->form->headline; ?></h1>
        
        
<!-- Content of "introduceText" tag -->
<?php echo $this->form->introduceText; ?>
                
                
<!-- Iterate about sections -->
<?php 
foreach ( $this->form->sections as $section )
{
    echo '<br><br>';
    echo '<h3>'. $section ['caption'] .'</h3>';
    
    ## Iterate about predicates, only if predicate was set ##
    if ( true == isset ( $section ['predicate'] ) )
        foreach ( $section ['predicate'] as $predicate )
        {
            echo '<br>'. $predicate ['caption'];
            
            echo '('. $predicate ['type'] .') ';
            
            echo '1' == $predicate ['mandatory']
                 ? '* &nbsp;'
                 : '';

            // Output HTML code which belongs to this type    
            echo FormgeneratorController::getHtmlForType (  $predicate ['type'],
                                                            $predicate ['typeparameter'], 
                                                            $predicate ['predicateuri'],
                                                            $this->form->targetclass );
        }
                    
    
    ## Iterate about nestedconfigs, only if nestedconfig was set ##
    if ( true == isset ( $section ['nestedconfig'] ) )
    {
        
        // Include formulas from nested configs
        foreach ( $section ['nestedconfig'] as $nestedconfig )
        {
            foreach ( $nestedconfig ['form']->sections as $section )
            {                        
                // Iterate about predicates, only if predicate was set
                if ( true == isset ( $section ['predicate'] ) )
                    foreach ( $section ['predicate'] as $predicate )
                    {
                        echo '<br>'. $predicate ['caption'];
            
                        echo '('. $predicate ['type'] .') ';
                        
                        echo '1' == $predicate ['mandatory']
                             ? '* &nbsp;'
                             : '';

                        // Output HTML code which belongs to this type    
                        echo FormgeneratorController::getHtmlForType ( $predicate ['type'], 
                                                                       $predicate ['typeparameter'],  
                                                                       $predicate ['predicateuri'],
                                                                       $nestedconfig ['form']->targetclass );
                    }
            }
        }
    }
}
?>
    <input type="hidden" name="loadedFormConfig" value="<?php echo $this->loadedFormConfig; ?>"/>
    <input type="hidden" name="resource" value=""/>
    
    <p><input id="addResource" class="button" type="button" value="Add New"/>&nbsp;&nbsp;<input id="editResource" class="button hidden" type="button" value="Edit"/></p>
</form>
<p id="test"></p>
<script type="text/javascript">
$('#addResource').click(function() {
    $('#editResource').show();
    response = jQuery.parseJSON($.ajax({
			type: "POST",
			url: "<?php echo (string) new OntoWiki_Url ( 
                                    array('controller' => 'formgenerator',
                                          'action' => 'checkform') 
                                 ); ?>",
			data: ($('#mainform').serializeArray()),
			dataType: "json",
			async:false
		}).responseText);
    var test = "";
    if (null != response.notset)
        for (var i=0;i<response.notset.length;i++){
            $('#' + response.notset[i]).css("background-color", "red");
        }
    else
    {
        for (var i=0;i<response.triples.length;i++){
            test += response.triples[i].S + '   ' + response.triples[i].P + '   ' + response.triples[i].O + '<br>';
        }
        test += '<br><br>';
        for (var i=0;i<response.relations.length;i++){
            test += response.relations[i].S + '   ' + response.relations[i].P + '   ' + response.relations[i].O + '<br>';
        }
        $('#test').html(test);
    }
});
</script>
