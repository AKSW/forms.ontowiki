<?php
/**
 * @category   OntoWiki
 * @package    OntoWiki_extensions_formgenerator
 * @author     Lars Eidam <larseidam@googlemail.com>
 * @author     Konrad Abicht <konrad@inspirito.de>
 * @copyright  Copyright (c) 2011
 * @license    http://opensource.org/licenses/gpl-license.php GNU General Public License (GPL)
 */
?>
<?php
    $classes = array ();
    $instances = array();
    
    $this->titleHelper->reset();
    
    $item = $element ['typeparameter'][0];
    $classes = $item['classes'];
    $instances = $item['instances'];
    
    $classesList = array();
    $uniqueInstances = array();
    
    $newClass = array();
    $newClass['uri'] = $item['class'];
    $newClass['label'] = $this->titleHelper->getTitle($item['class'], $this->selectedLanguage);
    $newClass['depth'] = 0;
    if (isset($instances[$item['class']]))
    {
        $newClass['instances'] = $instances[$item['class']];
        foreach ($newClass['instances'] as $instanceUri => $instanceName)
        {
            $newClass['instances'][$instanceUri] = $this->titleHelper->getTitle($instanceUri, $this->selectedLanguage);
            $uniqueInstances[$instanceUri] = array('depth' => 0, 'class' => $item['class']);
        }
        $newClass['hasinstances'] = true;
    }
    else
        $newClass['hasinstances'] = false;
    $classesList[$newClass['uri']] = $newClass;
    
    if (!function_exists('getClassList'))
    {
        function getClassList($classes, &$classesList, $instances, &$uniqueInstances, $titleHelper, $language, $depth = 1)
        {
            $resultHasInstances = false;
            
            foreach ($classes as $classIndex => $class) {
                $newClass = array();
                $newClass['uri'] = $classIndex;
                $newClass['label'] = $titleHelper->getTitle($classIndex, $language);
                $newClass['depth'] = $depth;
                
                // check if there are instances for the class
                if (isset($instances[$classIndex]))
                {
                    $newClass['instances'] = $instances[$classIndex];
                    foreach ($newClass['instances'] as $instanceUri => $instanceName)
                    {
                        // get labels for instance uris
                        $newClass['instances'][$instanceUri] = $titleHelper->getTitle($instanceUri, $language);
                        
                        // if there already a instance in a upper class, delete it
                        if (isset($uniqueInstances[$instanceUri]) && $uniqueInstances[$instanceUri]['depth'] < $depth)
                            unset($classesList[$uniqueInstances[$instanceUri]['class']]['instances'][$instanceUri]);
                        $uniqueInstances[$instanceUri] = array('depth' => $depth, 'class' => $newClass['uri']);
                    }
                    $newClass['hasinstances'] = true;
                }
                else
                    $newClass['hasinstances'] = false;
                
                // if new class is not in the classlist or the had a higher depth then the existing one,
                // write/overwrite the class in the classlist
                if (!isset($classesList[$newClass['uri']]) || $classesList[$newClass['uri']]['depth'] < $newClass['depth'])
                    $classesList[$newClass['uri']] = $newClass;
                
                // if the class has lower classes
                if (is_array($class))
                {
                    $hasinstances = getClassList($class, $classesList, $instances, $uniqueInstances, $titleHelper, $language, $depth + 1);
                    $classesList[$newClass['uri']]['hasinstances'] = $classesList[$newClass['uri']]['hasinstances'] || $hasinstances;
                }
                $resultHasInstances = $resultHasInstances || $newClass['hasinstances'];
            }
            return $resultHasInstances;
        }
    }
    
    $hasinstances = getClassList($classes, $classesList, $instances, $uniqueInstances, $this->titleHelper, $this->selectedLanguage);
    $classesList[$newClass['uri']]['hasinstances'] = $classesList[$newClass['uri']]['hasinstances'] || $hasinstances;
?>
<?php if ('report' == $this->form->getFormulaType()) { ?>
    <div class="predicateTitle"><?php echo $element ['title']; ?></div>
<?php } ?>
<div class="predicateValue" <?php echo (isset($element ['typeparameter'][0]['editalbe']) ? "id=\"" . $element ['typeparameter'][0]['classname']  . "\"" : "") ?>>
    <?php foreach ( $classesList as $class ) {?>
        <?php if (!isset($item['relation']) || $class['hasinstances']) { ?>
            <?php if ('report' != $this->form->getFormulaType()) { ?>
                <?php for ( $i = 0; $i <= $class ['depth']; $i++ ) { ?>
                    <div class="divClassPredicateDepth<?php echo ' divClassPredicateDepth' . $i; ?>"></div>
                <?php } ?>
                <div class="divClassPredicateValue">
                    <?php if (!(0 == $class ['depth'] && isset($item['shownooverclass'])) && (!isset($item['relation']) || $class['hasinstances'])) { ?>
                        <?php if (!isset($item['relation'])) { ?>
                            <div class="divClassPredicateValueInput">
                                <input type="checkbox" class="predicateValue_Class" name="<?php echo $element ['name']; ?>" value="<?php echo $class ['uri']; ?>"<?php echo ((is_array($element['value']) && false !== array_search($class['uri'], $element['value'])) || ($class['uri'] == $element['value']) ? ' checked="checked"' : ''); ?>/>
                            </div>
                        <?php } ?>
                        <span<?php echo (isset($item['relation']) ? ' class="bold"' : ''); ?>><?php echo $class ['label']; ?></span>
                        <?php if(!isset($item['relation']) && isset($element ['typeparameter'][0]['editalbe'])) { ?>
                            <a href="javascript:openBoxForm('<?php echo $element ['typeparameter'][0]['classname']; ?>', '<?php echo $class ['uri']; ?>')"><img src="../themes/dispedia/images/icon-edit.png"></a>
                        <?php } ?>
                        <div class="clear"></div>
                    <?php } ?>
                    <?php if (isset($item['relation']) && isset($class['instances']) && 0 < count($class['instances'])) { ?>
                        <?php foreach ( $class['instances'] as $instancesUri => $instancesLabel ) { ?>
                            <?php for ( $i = 0; $i <= $class ['depth'] + 1; $i++ ) { ?>
                                <div class="divClassPredicateDepth<?php echo ' divClassPredicateDepth' . $i; ?>"></div>
                            <?php } ?>
                            <div class="divClassPredicateValueInput">
                                <input type="checkbox" class="predicateValue_Class" name="<?php echo $element ['name']; ?>" value="<?php echo $instancesUri; ?>"<?php echo ((is_array($element['value']) && false !== array_search($instancesUri, $element['value'])) || ($instancesUri == $element['value']) ? ' checked="checked"' : ''); ?>/>
                            </div>
                            <?php echo $instancesLabel; ?>
                            <?php if (isset($element ['typeparameter'][0]['editalbe'])) { ?>
                                <a href="javascript:openBoxForm('<?php echo $element ['typeparameter'][0]['classname']; ?>', '<?php echo $instancesUri; ?>')"><img src="<?php echo $this->url; ?>../themes/dispedia/images/icon-edit.png"></a>
                            <?php } ?>
                            <div class="clear"></div>
                        <?php } ?>
                        <div class="placeholder"></div>
                    <?php } ?>
                </div>
            <?php } else { ?>
                <?php if (!(0 == $class ['depth'] && isset($item['shownooverclass'])) && (!isset($item['relation']) || $class['hasinstances'])) { ?>
                    <?php if ((is_array($element['value']) && false !== array_search($class['uri'], $element['value'])) || ($class['uri'] == $element['value'])) { ?>
                        <div class="divMultiplePredicateValue">
                            <div><span><?php echo $class ['label']; ?></span></div>
                        </div>
                    <?php } ?>
                <?php } ?>
            <?php } ?>
        <?php } ?>
    <?php } ?>
</div>
